#version 460 core

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D u_Twiddle;
layout(rgba32f, binding = 1) uniform image2D u_PingPong0;
layout(rgba32f, binding = 2) uniform image2D u_PingPong1;

#define PI 3.141592653589793238

uniform int u_Stage;
uniform int u_PingPong;
uniform int u_Direction;

struct complex
{
	float real;
	float im;
};

complex mul(complex c0, complex c1)
{
	complex c;
	c.real = c0.real * c1.real - c0.im * c1.im;
	c.im = c0.real * c1.im + c0.im * c1.real; 
	return c;
}

complex add(complex c0, complex c1)
{
	complex c;
	c.real = c0.real + c1.real;
	c.im = c0.im + c1.im;
	return c;
}

void horizontalButterfly()
{
	complex H;
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);

	if(u_PingPong == 0)
	{
		vec4 data = imageLoad(u_Twiddle, ivec2(u_Stage, x.x)).rgba;
		vec2 p_ = imageLoad(u_PingPong0, ivec2(data.z, x.y)).rg;
		vec2 q_ = imageLoad(u_PingPong0, ivec2(data.w, x.y)).rg;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(u_PingPong1, x, vec4(H.real, H.im, 0, 1));
	}
	else if(u_PingPong == 1)
	{
		vec4 data = imageLoad(u_Twiddle, ivec2(u_Stage, x.x)).rgba;
		vec2 p_ = imageLoad(u_PingPong1, ivec2(data.z, x.y)).rg;
		vec2 q_ = imageLoad(u_PingPong1, ivec2(data.w, x.y)).rg;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(u_PingPong0, x, vec4(H.real, H.im, 0, 1));
	}
}

void verticalButterfly()
{
	complex H;
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);

	if(u_PingPong == 0)
	{
		vec4 data = imageLoad(u_Twiddle, ivec2(u_Stage, x.y)).rgba;
		vec2 p_ = imageLoad(u_PingPong0, ivec2(x.x, data.z)).rb;
		vec2 q_ = imageLoad(u_PingPong0, ivec2(x.x, data.w)).rb;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(u_PingPong1, x, vec4(H.real, H.im, 0, 1));
	}
	else if(u_PingPong == 1)
	{
		vec4 data = imageLoad(u_Twiddle, ivec2(u_Stage, x.y)).rgba;
		vec2 p_ = imageLoad(u_PingPong1, ivec2(x.x, data.z)).rb;
		vec2 q_ = imageLoad(u_PingPong1, ivec2(x.x, data.w)).rb;
		vec2 w_ = vec2(data.x, data.y);

		complex p = complex(p_.x, p_.y);
		complex q = complex(q_.x, q_.y);
		complex w = complex(w_.x, w_.y);

		H = add(p, mul(w, q));

		imageStore(u_PingPong0, x, vec4(H.real, H.im, 0, 1));
	}
}

void main()
{
	if(u_Direction == 0)
		horizontalButterfly();
	else if(u_Direction == 1)
		verticalButterfly();
}